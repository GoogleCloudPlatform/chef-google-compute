# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by chef-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

require 'google/compute/property/array'
module Google
  module Compute
    module Data
      # A class to manage data for service_accounts for instance_template.
      class InstaTemplServiAccou
        include Comparable

        attr_reader :email
        attr_reader :scopes

        def to_json(_arg = nil)
          {
            'email' => email,
            'scopes' => scopes
          }.reject { |_k, v| v.nil? }.to_json
        end

        def to_s
          {
            email: email.to_s,
            scopes: scopes.to_s
          }.map { |k, v| "#{k}: #{v}" }.join(', ')
        end

        def ==(other)
          return false unless other.is_a? InstaTemplServiAccou
          compare_fields(other).each do |compare|
            next if compare[:self].nil? || compare[:other].nil?
            return false if compare[:self] != compare[:other]
          end
          true
        end

        def <=>(other)
          return false unless other.is_a? InstaTemplServiAccou
          compare_fields(other).each do |compare|
            next if compare[:self].nil? || compare[:other].nil?
            result = compare[:self] <=> compare[:other]
            return result unless result.zero?
          end
          0
        end

        def inspect
          to_json
        end

        private

        def compare_fields(other)
          [
            { self: email, other: other.email },
            { self: scopes, other: other.scopes }
          ]
        end
      end

      # Manages a InstaTemplServiAccou nested object
      # Data is coming from the GCP API
      class InstaTemplServiAccouApi < InstaTemplServiAccou
        def initialize(args)
          @email = Google::Compute::Property::Boolean.api_parse(args['email'])
          @scopes =
            Google::Compute::Property::StringArray.api_parse(args['scopes'])
        end
      end

      # Manages a InstaTemplServiAccou nested object
      # Data is coming from the Chef catalog
      class InstaTemplServiAccouCatalog < InstaTemplServiAccou
        def initialize(args)
          @email =
            Google::Compute::Property::Boolean.catalog_parse(args[:email])
          @scopes =
            Google::Compute::Property::StringArray.catalog_parse(args[:scopes])
        end
      end
    end

    module Property
      # A class to manage input to service_accounts for instance_template.
      class InstaTemplServiAccou
        def self.coerce
          lambda do |x|
            ::Google::Compute::Property::InstaTemplServiAccou.catalog_parse(x)
          end
        end

        # Used for parsing Chef catalog
        def self.catalog_parse(value)
          return if value.nil?
          return value if value.is_a? Data::InstaTemplServiAccou
          Data::InstaTemplServiAccouCatalog.new(value)
        end

        # Used for parsing GCP API responses
        def self.api_parse(value)
          return if value.nil?
          return value if value.is_a? Data::InstaTemplServiAccou
          Data::InstaTemplServiAccouApi.new(value)
        end
      end

      # A Chef property that holds an integer
      class InstaTemplServiAccouArray < Google::Compute::Property::Array
        def self.coerce
          lambda do |x|
            type = ::Google::Compute::Property::InstaTemplServiAccouArray
            type.catalog_parse(x)
          end
        end

        # Used for parsing Chef catalog
        def self.catalog_parse(value)
          return if value.nil?
          return InstaTemplServiAccou.catalog_parse(value) \
            unless value.is_a?(::Array)
          value.map { |v| InstaTemplServiAccou.catalog_parse(v) }
        end

        # Used for parsing GCP API responses
        def self.api_parse(value)
          return if value.nil?
          return InstaTemplServiAccou.api_parse(value) \
            unless value.is_a?(::Array)
          value.map { |v| InstaTemplServiAccou.api_parse(v) }
        end
      end
    end
  end
end
