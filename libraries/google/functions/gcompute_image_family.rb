# Copyright 2017 Google Inc.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# ----------------------------------------------------------------------------
#
#     ***     AUTO GENERATED CODE    ***    AUTO GENERATED CODE     ***
#
# ----------------------------------------------------------------------------
#
#     This file is automatically generated by chef-codegen and manual
#     changes will be clobbered when the file is regenerated.
#
#     Please read more about how to change this file in README.md and
#     CONTRIBUTING.md located at the root of this package.
#
# ----------------------------------------------------------------------------

# Builds the family resource identifier required to uniquely identify the
# family, e.g. to create virtual machines based on it. You can use this
# function as `source_image` of a `gcompute_instance` resource.
#
# Arguments:
#   - family_name: string
#     the name of the family, e.g. ubuntu-1604-lts
#   - project_name: string
#     the name of the project that hosts the family,
#     e.g. ubuntu-os-cloud
#
# Examples:
#   - gcompute_image_family('ubuntu-1604-lts', 'ubuntu-os-cloud')
#   - gcompute_image_family('my-web-server', 'my-project')
#
# Note: In the case of private images, your credentials will need to have
# the proper permissions to access the image.
#
# To get a list of supported families you can use the gcloud utility:
#
#   gcloud compute images list
module Google
  # Module that holds all client-side functions
  module Functions
    def gcompute_image_family(family_name, project_name)
      "projects/#{project_name}/global/images/family/#{family_name}"
    end
  end
end
